<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.helper.store.dao.OrderMapper">
    <insert id="saveOrder" parameterType="map">
        insert into `order`(gs_id,order_no,create_time,status,address_id,buy_user_id,sell_user_id,price)value(#{gsId},#{orderNo},#{createTime},#{status},#{addressId},#{buyUserId},#{sellUserId},#{price})
    </insert>

    <update id="cancelOrder" parameterType="map">
        UPDATE `order`
        SET status = 4
        WHERE
            order_id = #{orderId}
    </update>

    <update id="payOrder" parameterType="map">
        UPDATE `order`
        SET status = 1
        WHERE
            order_id = #{orderId}
    </update>
    
    <update id="inputTrackingNumber" parameterType="map">
        UPDATE `order`
        set status = 2,trackingnumber=#{trackingNumber}
        where
            order_id=#{orderId}
    </update>

    <select id="getTrackingNumber" parameterType="map">
        select trackingnumber
        from `order`
        where  order_id=#{orderId}
    </select>

    <select id="getOrderByBuyorsellId" parameterType="map" resultType="map">
          select shoe.*,`order`.*,goods.size,address.address,address.user_name,address.phone
        from `order`,shoe,goods,address
        WHERE
        goods.shoe_id=shoe.id and
        <choose>
            <when test="buyorsellId!=0" > buy_user_id=#{userId} </when>
            <otherwise> sell_user_id=#{userId} </otherwise>
        </choose>
        and `order`.gs_id=goods.gs_id
        and `order`.address_id=address.id
        order by `order`.create_time desc
    </select>

    <delete id="deleteOrder">
        DELETE
        FROM
            `order`
        WHERE
            order_id = #{orderId}
    </delete>

    <select id="getOrderByNo" parameterType="map" resultType="map">
        SELECT
           `order`.*,
            shoe.*,
            goods.size,
            address.address,
            address.user_name,
            address.phone
        FROM
            `order`,shoe,goods,address
        WHERE
            order_no = #{orderNo} and goods.shoe_id=shoe.id and `order`.gs_id=goods.gs_id
        and `order`.address_id=address.id
    </select>

    <update id="orderFinish" parameterType="map">
          UPDATE `order`
          set status=3
          where
           order_id=#{orderId}
    </update>


</mapper>